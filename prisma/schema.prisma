generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id
  firstname  String
  lastname   String
  email      String @unique
  profilepic String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  reviews   Review[]
  rating    Rating[]
  like      Like[]
  comment   Comment[]
  reports   Report[]
}

model Review {
  id                String    @id @default(uuid())
  coursename        String
  coursedescription String
  courseimage       String?
  category          String
  courseprice       Int
  courseprovider    String
  rating            Rating[]
  like              Like[]
  comment           Comment[]
  reports           Report[]

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rating {
  id          String   @id @default(uuid())
  reviewId    String
  review      Review   @relation(fields: [reviewId], references: [id])
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  ratingValue Int
  createdAt   DateTime @default(now())

  @@unique([userId, reviewId])
}

model Like {
  id       String   @id @default(uuid())
  reviewId String
  review   Review   @relation(fields: [reviewId], references: [id])
  userId   String
  user     User     @relation(fields: [userId], references: [id])
  type     LikeType

  createdAt DateTime @default(now())
}

model Comment {
  id       String   @id @default(uuid())
  text     String
  createAt DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  reviewId String
  review   Review @relation(fields: [reviewId], references: [id])
}

enum LikeType {
  LIKE
  DISLIKE
}

model Report {
  id     String @id @default(uuid())
  reason String
  userId String
  user   User   @relation(fields: [userId], references: [id])

  reviewId String
  review   Review @relation(fields: [reviewId], references: [id])

  createdAt DateTime @default(now())

  @@unique([userId, reviewId])
}